"""added products and movements tables

Revision ID: e0d52a79ab75
Revises: 68da3f705c70
Create Date: 2023-04-28 10:17:29.272751

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'e0d52a79ab75'
down_revision = '68da3f705c70'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Integer(), nullable=True),
    sa.Column('amount2', sa.Integer(), nullable=True),
    sa.Column('amount_limit', sa.Integer(), nullable=True),
    sa.Column('size', sa.String(length=16), nullable=False),
    sa.Column('notes', sa.String(length=512), nullable=True),
    sa.Column('to_be_ordered', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_products_name'), ['name'], unique=False)

    op.create_table('product_movement',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('movement_date', sa.Date(), server_default=sa.text('now()'), nullable=True),
    sa.Column('from_location_id', sa.Integer(), nullable=True),
    sa.Column('to_location_id', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('qty', sa.Integer(), nullable=False),
    sa.Column('time_created', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('time_updated', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['from_location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['to_location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('product_stock',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('available_stock', sa.Integer(), nullable=False),
    sa.Column('time_created', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('time_updated', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('inventory', schema=None) as batch_op:
        batch_op.drop_index('ix_inventory_name')

    op.drop_table('inventory')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('inventory',
    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('name', mysql.VARCHAR(length=256), nullable=False),
    sa.Column('location_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('amount', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('amount2', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('amount_limit', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('size', mysql.VARCHAR(length=16), nullable=False),
    sa.Column('notes', mysql.VARCHAR(length=512), nullable=True),
    sa.Column('to_be_ordered', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], name='inventory_ibfk_1'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_general_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('inventory', schema=None) as batch_op:
        batch_op.create_index('ix_inventory_name', ['name'], unique=False)

    op.drop_table('product_stock')
    op.drop_table('product_movement')
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_products_name'))

    op.drop_table('products')
    # ### end Alembic commands ###
